rm -f ./tb/tb_top3.md ./tb/tb_top3.vcd ./tb/tb_top3.o
cp ./tb/tb_top3.v ./tb/tb_top3.v.bk
sed -i 's#.verilog#./data/Test_37_Instr2.dat#' ./tb/tb_top3.v
iverilog ./tb/tb_top3.v -o ./tb/tb_top3.o
mv ./tb/tb_top3.v.bk ./tb/tb_top3.v
vvp ./tb/tb_top3.o
VCD info: dumpfile ./tb/tb_top3.vcd opened for output.
--------------BEGIN TEST---------------
pc xxxxxxxx,	 instr xxxxxxxx		
reg(9) = xxxxxxxx xxxxxxxx 		mem(1) = 00000000		HEXFILE = ./data/Test_37_Instr2.dat
WARNING: ./tb/tb_top3.v:48: $readmemh(./data/Test_37_Instr2.dat): Not enough words in the file for the requested range [0:255].
pc = 0x0 : 18f06a13
pc = 0x4 : 3fb95ab7
pc xxxxxxxx,	 instr xxxxxxxx		
reg(9) = 00000000 00000000 		mem(1) = 00000000		
pc 00000000,	 instr 18f06a13		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x20, x 0, 0x0000018f		 x20 <= 0x0000018f
pc 00000004,	 instr 3fb95ab7		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_lui 	x21, 	  0x3fb95000		 x21 <= 0x3fb95000
pc 00000008,	 instr 015a6a33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x20, x20, x21			 x20 <= 0x3fb9518f
pc 0000000c,	 instr 98765ab7		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_lui 	x21, 	  0x98765000		 x21 <= 0x98765000
pc 00000010,	 instr 345a8a93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x21, x21, 0x00000345		 x21 <= 0x98765345
pc 00000014,	 instr c00a0b13		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x22, x20, 0xfffffc00		 x22 <= 0x3fb9558f
pc 00000018,	 instr 7bca4b93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x23, x20, 0x000007bc		 x23 <= 0x3fb95633
pc 0000001c,	 instr 034a3b13		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x22, x20, 0x00000034		 x22 <= 0x00000000
pc 00000020,	 instr fffa3b93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x23, x20, 0xffffffff		 x23 <= 0x00000001
pc 00000024,	 instr 765a7b13		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x22, x20, 0x00000765		 x22 <= 0x00000105
pc 00000028,	 instr fffa2b93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x23, x20, 0xffffffff		 x23 <= 0x00000000
pc 0000002c,	 instr 414a8b33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x21, x20			 x22 <= 0x58bd01b6
pc 00000030,	 instr 016a4bb3		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x23, x20, x22			 x23 <= 0x67045039
pc 00000034,	 instr 014a8b33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x21, x20			 x22 <= 0xd82fa4d4
pc 00000038,	 instr 414b0b33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x22, x20			 x22 <= 0x98765345
pc 0000003c,	 instr 016bebb3		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x23, x23, x22			 x23 <= 0xff76537d
pc 00000040,	 instr 016bfbb3		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x23, x23, x22			 x23 <= 0x98765345
pc 00000044,	 instr 015a2b33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x20, x21			 x22 <= 0x00000000
pc 00000048,	 instr 015a3bb3		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x23, x20, x21			 x23 <= 0x00000001
pc 0000004c,	 instr 00418193		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x 3, x 3, 0x00000004		 x 3 <= 0x00000004
pc 00000050,	 instr 003a1b33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x20, x 3			 x22 <= 0xfb9518f0
pc 00000054,	 instr 003adb33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x21, x 3			 x22 <= 0x09876534
pc 00000058,	 instr 403adb33		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x22, x21, x 3			 x22 <= 0xf9876534
pc 0000005c,	 instr 010a9b93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x23, x21, 0x00000010		 x23 <= 0x53450000
pc 00000060,	 instr 008adb93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x23, x21, 0x00000008		 x23 <= 0x00987653
pc 00000064,	 instr 408adb93		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x23, x21, 0x00000408		 x23 <= 0xff987653
pc 00000068,	 instr 00000193		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x 3, x 0, 0x00000000		 x 3 <= 0x00000000
pc 0000006c,	 instr 0f500293		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x 5, x 0, 0x000000f5		 x 5 <= 0x000000f5
pc 00000070,	 instr 0141a023		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_store 	x20 0x00000000(x 3) 	0x3fb9518f
pc 00000074,	 instr 0151a223		
reg(9) = 00000000 00000000 		mem(1) = 98765345		### is_store 	x21 0x00000004(x 3) 	0x98765345
pc 00000078,	 instr 0171a423		
reg(9) = 00000000 00000000 		mem(1) = 98765345		### is_store 	x23 0x00000008(x 3) 	0xff987653
pc 0000007c,	 instr 01619223		
reg(9) = 00000000 00000000 		mem(1) = 98766534		### is_store 	x22 0x00000004(x 3) 	0xf9876534
pc 00000080,	 instr 01419523		
reg(9) = 00000000 00000000 		mem(1) = 98766534		### is_store 	x20 0x0000000a(x 3) 	0x3fb9518f
pc 00000084,	 instr 005183a3		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x 5 0x00000007(x 3) 	0x000000f5
pc 00000088,	 instr 005184a3		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x 5 0x00000009(x 3) 	0x000000f5
pc 0000008c,	 instr 00518423		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x 5 0x00000008(x 3) 	0x000000f5
pc 00000090,	 instr 0001ab03		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_load 	x22, 0x00000000(x 3) 	0x3fb9518f
pc 00000094,	 instr 0161a623		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x22 0x0000000c(x 3) 	0x3fb9518f
pc 00000098,	 instr 00819b83		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_load 	x23, 0x00000008(x 3) 	0xfffff5f5
pc 0000009c,	 instr 0171a823		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x23 0x00000010(x 3) 	0xfffff5f5
pc 000000a0,	 instr 0081db83		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_load 	x23, 0x00000008(x 3) 	0x0000f5f5
pc 000000a4,	 instr 0141aa23		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x20 0x00000014(x 3) 	0x3fb9518f
pc 000000a8,	 instr 00718b03		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_load 	x22, 0x00000007(x 3) 	0xfffffff5
pc 000000ac,	 instr 0151ac23		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x21 0x00000018(x 3) 	0x98765345
pc 000000b0,	 instr 0071cb83		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_load 	x23, 0x00000007(x 3) 	0x000000f5
pc 000000b4,	 instr 0171ae23		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x23 0x0000001c(x 3) 	0x000000f5
pc 000000b8,	 instr 0181cb83		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_load 	x23, 0x00000018(x 3) 	0x00000045
pc 000000bc,	 instr 0371a023		
reg(9) = 00000000 00000000 		mem(1) = f5766534		### is_store 	x23 0x00000020(x 3) 	0x00000045
pc 000000c0,	 instr 0001a223		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_store 	x 0 0x00000004(x 3) 	0x00000000
pc 000000c4,	 instr 009074b3		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alu 	x 9, x 0, x 9			 x 9 <= 0x00000000
pc 000000c8,	 instr 015a1463		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_bxx 	t=1,	  0x000000d0
pc 000000d0,	 instr 015a5463		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_bxx 	t=1,	  0x000000d8
pc 000000d8,	 instr 015a7463		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_bxx 	t=0,	  0x000000dc
pc 000000dc,	 instr 00248493		
reg(9) = 00000000 00000000 		mem(1) = 00000000		### is_alui 	x 9, x 9, 0x00000002		 x 9 <= 0x00000002
pc 000000e0,	 instr 015a4463		
reg(9) = 00000002 00000000 		mem(1) = 00000000		### is_bxx 	t=0,	  0x000000e4
pc 000000e4,	 instr 00348493		
reg(9) = 00000002 00000000 		mem(1) = 00000000		### is_alui 	x 9, x 9, 0x00000003		 x 9 <= 0x00000005
pc 000000e8,	 instr 015a6463		
reg(9) = 00000005 00000000 		mem(1) = 00000000		### is_bxx 	t=1,	  0x000000f0
pc 000000f0,	 instr 0181ac83		
reg(9) = 00000005 00000000 		mem(1) = 00000000		### is_load 	x25, 0x00000018(x 3) 	0x98765345
pc 000000f4,	 instr 019a8463		
reg(9) = 00000005 00000000 		mem(1) = 00000000		### is_bxx 	t=1,	  0x000000fc
pc 000000fc,	 instr 0091a223		
reg(9) = 00000005 00000000 		mem(1) = 00000005		### is_store 	x 9 0x00000004(x 3) 	0x00000005
pc 00000100,	 instr 0041a503		
reg(9) = 00000005 00000000 		mem(1) = 00000005		### is_load 	x10, 0x00000004(x 3) 	0x00000005
pc 00000104,	 instr 00c000ef		
reg(9) = 00000005 00000005 		mem(1) = 00000005		### is_jal 		  0x00000110
pc 00000110,	 instr 45c56513		
reg(9) = 00000005 00000005 		mem(1) = 00000005		### is_alui 	x10, x10, 0x0000045c		 x10 <= 0x0000045d
pc 00000114,	 instr 00a1a223		
reg(9) = 00000005 0000045d 		mem(1) = 0000045d		### is_store 	x10 0x00000004(x 3) 	0x0000045d
pc 00000118,	 instr 00008067		
reg(9) = 00000005 0000045d 		mem(1) = 0000045d		### is_jalr
pc 00000108,	 instr 00850513		
reg(9) = 00000005 0000045d 		mem(1) = 0000045d		### is_alui 	x10, x10, 0x00000008		 x10 <= 0x00000465
pc 0000010c,	 instr 00a1a223		
reg(9) = 00000005 00000465 		mem(1) = 00000465		### is_store 	x10 0x00000004(x 3) 	0x00000465
pc 00000110,	 instr 45c56513		
reg(9) = 00000005 00000465 		mem(1) = 00000465		### is_alui 	x10, x10, 0x0000045c		 x10 <= 0x0000047d
pc 00000114,	 instr 00a1a223		
reg(9) = 00000005 0000047d 		mem(1) = 0000047d		### is_store 	x10 0x00000004(x 3) 	0x0000047d
pc 00000118,	 instr 00008067		
reg(9) = 00000005 0000047d 		mem(1) = 0000047d		### is_jalr
pc 00000108,	 instr 00850513		
reg(9) = 00000005 0000047d 		mem(1) = 0000047d		### is_alui 	x10, x10, 0x00000008		 x10 <= 0x00000485
pc 0000010c,	 instr 00a1a223		
reg(9) = 00000005 00000485 		mem(1) = 00000485		### is_store 	x10 0x00000004(x 3) 	0x00000485
pc 00000110,	 instr 45c56513		
reg(9) = 00000005 00000485 		mem(1) = 00000485		### is_alui 	x10, x10, 0x0000045c		 x10 <= 0x000004dd
pc 00000114,	 instr 00a1a223		
reg(9) = 00000005 000004dd 		mem(1) = 000004dd		### is_store 	x10 0x00000004(x 3) 	0x000004dd
pc 00000118,	 instr 00008067		
reg(9) = 00000005 000004dd 		mem(1) = 000004dd		### is_jalr
pc 00000108,	 instr 00850513		
reg(9) = 00000005 000004dd 		mem(1) = 000004dd		### is_alui 	x10, x10, 0x00000008		 x10 <= 0x000004e5
pc 0000010c,	 instr 00a1a223		
reg(9) = 00000005 000004e5 		mem(1) = 000004e5		### is_store 	x10 0x00000004(x 3) 	0x000004e5
pc 00000110,	 instr 45c56513		
reg(9) = 00000005 000004e5 		mem(1) = 000004e5		### is_alui 	x10, x10, 0x0000045c		 x10 <= 0x000004fd
pc 00000114,	 instr 00a1a223		
reg(9) = 00000005 000004fd 		mem(1) = 000004fd		### is_store 	x10 0x00000004(x 3) 	0x000004fd
